static const char *localeName(const int id)
{
    switch(id) {
    case 0x0: return "en";
    case 0x4: return "zh_CHS";
    case 0x7f: return "invariant";
    case 0x400: return "invalid";
    case 0x401: return "ar_SA";
    case 0x402: return "bg_BG";
    case 0x403: return "ca_ES";
    case 0x404: return "zh_TW";
    case 0x405: return "cs_CZ";
    case 0x406: return "da_DK";
    case 0x407: return "de_DE";
    case 0x408: return "el_GR";
    case 0x409: return "en_US";
    case 0x40a: return "es_ES-ts";
    case 0x40b: return "fi_FI";
    case 0x40c: return "fr_FR";
    case 0x40d: return "he_IL";
    case 0x40e: return "hu_HU";
    case 0x40f: return "is_IS";
    case 0x410: return "it_IT";
    case 0x411: return "ja_JP";
    case 0x412: return "ko_KR";
    case 0x413: return "nl_NL";
    case 0x414: return "nb_NO";
    case 0x415: return "pl_PL";
    case 0x416: return "pt_BR";
    case 0x417: return "rm_CH";
    case 0x418: return "ro_RO";
    case 0x419: return "ru_RU";
    case 0x41a: return "hr_HR";
    case 0x41b: return "sk_SK";
    case 0x41c: return "sq_AL";
    case 0x41d: return "sv_SE";
    case 0x41e: return "th_TH";
    case 0x41f: return "tr_TR";
    case 0x420: return "ur_PK";
    case 0x421: return "id_ID";
    case 0x422: return "uk_UA";
    case 0x423: return "be_BY";
    case 0x424: return "sl_SI";
    case 0x425: return "et_EE";
    case 0x426: return "lv_LV";
    case 0x427: return "lt_LT";
    case 0x428: return "tg_TJ-Cyrl";
    case 0x429: return "fa_IR";
    case 0x42a: return "vi_VN";
    case 0x42b: return "hy_AM";
    case 0x42c: return "az_AZ-Latn";
    case 0x42d: return "eu_ES";
    case 0x42e: return "wen_DE";
    case 0x42f: return "mk_MK";
    case 0x430: return "sutu";
    case 0x432: return "tn_ZA";
    case 0x434: return "xh_ZA";
    case 0x435: return "zu_ZA";
    case 0x436: return "af_ZA";
    case 0x437: return "ka_GE";
    case 0x438: return "fo_FO";
    case 0x439: return "hi_IN";
    case 0x43a: return "mt_MT";
    case 0x43b: return "se_NO";
    case 0x43e: return "ms_MY";
    case 0x43f: return "kk_KZ";
    case 0x440: return "ky_KG";
    case 0x441: return "sw_KE";
    case 0x442: return "tk_TM";
    case 0x443: return "uz_UZ-Latn";
    case 0x444: return "tt_RU";
    case 0x445: return "bn_IN";
    case 0x446: return "pa_IN";
    case 0x447: return "gu_IN";
    case 0x448: return "or_IN";
    case 0x449: return "ta_IN";
    case 0x44a: return "te_IN";
    case 0x44b: return "kn_IN";
    case 0x44c: return "ml_IN";
    case 0x44d: return "as_IN";
    case 0x44e: return "mr_IN";
    case 0x44f: return "sa_IN";
    case 0x450: return "mn_MN";
    case 0x451: return "bo_CN";
    case 0x452: return "cy_GB";
    case 0x453: return "kh_KH";
    case 0x454: return "lo_LA";
    case 0x455: return "my_MM";
    case 0x456: return "gl_ES";
    case 0x457: return "kok_IN";
    case 0x45a: return "syr_SY";
    case 0x45b: return "si_LK";
    case 0x45d: return "iu_CA-Cans";
    case 0x45e: return "am_ET";
    case 0x461: return "ne_NP";
    case 0x462: return "fy_NL";
    case 0x463: return "ps_AF";
    case 0x464: return "fil_PH";
    case 0x465: return "dv_MV";
    case 0x468: return "ha_NG-Latn";
    case 0x46a: return "yo_NG";
    case 0x46b: return "quz_BO";
    case 0x46c: return "ns_ZA";
    case 0x46d: return "ba_RU";
    case 0x46e: return "lb_LU";
    case 0x46f: return "kl_GL";
    case 0x478: return "ii_CN";
    case 0x47a: return "arn_CL";
    case 0x47c: return "moh_CA";
    case 0x47e: return "br_FR";
    case 0x480: return "ug_CN";
    case 0x481: return "mi_NZ";
    case 0x482: return "oc_FR";
    case 0x483: return "co_FR";
    case 0x484: return "gsw_FR";
    case 0x485: return "sah_RU";
    case 0x486: return "qut_GT";
    case 0x487: return "rw_RW";
    case 0x488: return "wo_SN";
    case 0x48c: return "gbz_AF";
    case 0x800: return "system";
    case 0x801: return "ar_IQ";
    case 0x804: return "zh_CN";
    case 0x807: return "de_CH";
    case 0x809: return "en_GB";
    case 0x80a: return "es_MX";
    case 0x80c: return "fr_BE";
    case 0x810: return "it_CH";
    case 0x812: return "ko_KR@win95";
    case 0x813: return "nl_BE";
    case 0x814: return "nn_NO";
    case 0x816: return "pt_PT";
    case 0x81a: return "sr_SP-Latn";
    case 0x81d: return "sv_FI";
    case 0x820: return "tr_IN";
    case 0x827: return "lt_LT@win98";
    case 0x82c: return "az_AZ-Cyrl";
    case 0x82e: return "wee_DE";
    case 0x83b: return "se_SE";
    case 0x83c: return "ga_IE";
    case 0x83e: return "ms_BN";
    case 0x843: return "uz_UZ-Cyrl";
    case 0x850: return "mn_CN";
    case 0x851: return "bo_BT";
    case 0x85d: return "iu_CA-Latn";
    case 0x85f: return "ber_DZ";
    case 0x86b: return "quz_EC";
    case 0xc01: return "ar_EG";
    case 0xc04: return "zh_HK";
    case 0xc07: return "de_AT";
    case 0xc09: return "en_AU";
    case 0xc0a: return "es_ES";
    case 0xc0c: return "fr_CA";
    case 0xc1a: return "sr_SP-Cyrl";
    case 0xc3b: return "se_FI";
    case 0xc6b: return "quz_PE";
    case 0x1001: return "ar_LY";
    case 0x1004: return "zh_SG";
    case 0x1007: return "de_LU";
    case 0x1009: return "en_CA";
    case 0x100a: return "es_GT";
    case 0x100c: return "fr_CH";
    case 0x101a: return "hr_BA";
    case 0x103b: return "smj_NO";
    case 0x1401: return "ar_DZ";
    case 0x1404: return "zh_MO";
    case 0x1407: return "de_LI";
    case 0x1409: return "en_NZ";
    case 0x140a: return "es_CR";
    case 0x140c: return "fr_LU";
    case 0x141a: return "bs_BA-Latn";
    case 0x143b: return "smj_SE";
    case 0x1801: return "ar_MA";
    case 0x1809: return "en_IE";
    case 0x180a: return "es_PA";
    case 0x180c: return "fr_MC";
    case 0x181a: return "sr_BA-Latn";
    case 0x183b: return "sma_NO";
    case 0x1c01: return "ar_TN";
    case 0x1c09: return "en_ZA";
    case 0x1c0a: return "es_DO";
    case 0x1c1a: return "sr_BA-Cyrl";
    case 0x1c3b: return "sma_SE";
    case 0x2001: return "ar_OM";
    case 0x2009: return "en_JA";
    case 0x200a: return "es_VE";
    case 0x201a: return "bs_BA-Cyrl";
    case 0x203b: return "sms_FI";
    case 0x2401: return "ar_YE";
    case 0x2409: return "en_CB";
    case 0x240a: return "es_CO";
    case 0x243b: return "smn_FI";
    case 0x2801: return "ar_SY";
    case 0x2809: return "en_BZ";
    case 0x280a: return "es_PE";
    case 0x2c01: return "ar_JO";
    case 0x2c09: return "en_TT";
    case 0x2c0a: return "es_AR";
    case 0x3001: return "ar_LB";
    case 0x3009: return "en_ZW";
    case 0x300a: return "es_EC";
    case 0x3401: return "ar_KW";
    case 0x3409: return "en_PH";
    case 0x340a: return "es_CL";
    case 0x3801: return "ar_AE";
    case 0x380a: return "es_UY";
    case 0x3c01: return "ar_BH";
    case 0x3c0a: return "es_PY";
    case 0x4001: return "ar_QA";
    case 0x4009: return "en_IN";
    case 0x400a: return "es_BO";
    case 0x4409: return "en_MY";
    case 0x440a: return "es_SV";
    case 0x4809: return "en_SG";
    case 0x480a: return "es_HN";
    case 0x4c0a: return "es_NI";
    case 0x500a: return "es_PR";
    case 0x540a: return "es_US";
    case 0x7c04: return "zh_CHT";
    default: return "unknown";
    }
}
